data <- read.table("F:/Desktop/毕业设计/代码与数据/TAPE/celltypedata.txt",
                   sep = "\t",header = T,row.names = 1)
data <- data[rowSums(data) > 1,]
data<-as.matrix(t(data))

##################################反卷积马赛克+bar#############################
colnames(data) <- paste0(colnames(data)," cell")
library("pheatmap")
pheatmap(data,
         cluster_cols = F,
         cluster_rows = F,
         legend = F,
         color = c("#f7e9ed","#f6b6c6"),
         border = "white",
         fontsize_row = 8,
         fontsize_col = 8,
         angle_col = c("45")
         )

df <- data.frame(celltype = colnames(data),nmatrix = colSums(data))
library(ggplot2)
ggplot(df, aes(celltype, nmatrix)) +
  geom_col(position= position_dodge(0),fill = "#DDF1D0") +
  theme_classic() + 
  theme(axis.text.x =element_text(angle = 45,hjust = 1),
        # axis.text.x = element_blank(),
        # axis.text.y = element_blank(),
        # axis.line = element_blank(),
        # axis.ticks =  element_blank(),
        legend.position = "none")+
  labs(x="",y="")


df <- data.frame(cancer = rownames(data),nmatrix = rowSums(data))
ggplot(df, aes(cancer, nmatrix)) +
  geom_col(fill = "#DDF1D0") +
  theme_classic() + 
  theme(
        # axis.text.x = element_blank(),
        axis.text.y = element_blank(),
        # axis.line = element_blank(),
        # axis.ticks =  element_blank(),
        legend.position = "none")+
  labs(x="",y="")+
  coord_flip()

##################################反卷积细胞比例#############################
library(dplyr)
library(tidyr)
library(tibble)
library(ggpubr)
CANCER<-c("BLCA","BRCA","CESC","CHOL","COAD","DLBC","ESCA","GBM","HNSC","KICH","KIRC",
          "LAML","LIHC","LUAD","LUSC","OV","PAAD","PRAD","SKCM","STAD","THCA","UCEC","UVM")

setwd("D:/Desktop/毕业设计/代码与数据/免疫/比例")
list <- list.files()
df1=data.frame()
for(cancer in CANCER[5:23]){
  data = read.table(paste0("TAPE_",cancer,".txt"),header=F,sep = "\t")
  tumor<-read.table(paste0("D:\\Desktop\\毕业设计\\代码与数据\\衰老\\CS\\TCGA_",cancer,"_CS.txt"), 
                    header = TRUE,row.names = 1,sep="\t")
  df <-data.frame(Composition=colMeans(data))
  df$cancer = cancer
  df$CellType=names(tumor)[order(names(tumor))]
  df1 = rbind(df1,df)
}
# write.table(df1,"all.cell.frection.txt",quote = F,sep = "\t")
library(tidyverse)
df1 = read.table("F:/Desktop/毕业设计/outputdata/all.cell.frection.txt",header = T,sep = "\t")
df1 <- df1[order(df1$cancer,decreasing = T), ]
color_list <- c("#b2cbe6", "#9FA8DA",
  "#FCE4EC", "#FFB3C8","#e6a0af","#EF9A9A", "#E57373","#EF5350","#B71C1C",#免疫细胞7
  "#EC407A", "#C2185B","#880E4F","#CE93D8",  "#cb86b5","#9C27B0", "#7B1FA2", #免疫细胞7v
  "#D4F69F", "#A1FFA1","#91FF91","#76d4a4", "#81C784", "#2E7D32",#免疫相关细胞6
   "#FFFDE7","#FFECB3","#DCE775","#C0CA33", "#FFEE58","#FDD835","#F9A825", #功能性细胞7
  "#B2EBF2", "#4DD0E1","#00BCD4","#0097A7", "#006064",#干细胞和前体细胞5
   "#D7CCC8","#A1887F"
  )

# 确保 CellType 列是 factor，并按照你提供的顺序排序
df1$CellType <- factor(df1$CellType, levels = 
 c("AC_Like_Malignant", "Malignant", #恶性细胞2
   "B","Mast", "MonoMacro","Neutrophils", "NK", "pDC","Plasma",#免疫细胞7
   "CD4Tconv", "CD8T", "CD8Tex", "DC",  "Promonocyte","Tprolif", "Treg",#免疫细胞7
   "Pericytes", "Astrocyte","Neuron","Oligodendrocyte", "SMC","Vascular",#免疫相关细胞6
   "Endothelial", "Epithelial", "Fibroblasts", "Myofibroblasts","Myocyte","Acinar", "Ductal",#功能性细胞7
   "Hepatic progenitor","HSC", "Progenitor","OPC", "Endometrial stromal cells", #干细胞和前体细胞5
    "EryPro", "GMP"#特殊细胞类型2
            ))
p1 = ggbarplot(df1, x = "cancer", y = "Composition",
          size = 0, fill = "CellType", color = "transparent") +
  theme(legend.position = "bottom") +
  theme(legend.position = "right") +
  labs(x = "", y = "", title = "") +
  coord_flip() +
  scale_fill_manual(values = setNames(color_list, levels(df1$CellType)))

device_size <- dev.size()
width <- device_size[1]  # 获取宽度
height <- device_size[2]  # 获取高度
pdf("F:/Desktop/毕业设计/plot/文章图/R1细胞比例图.pdf",
    width = width, height = height)
p1
dev.off()
####### 验证每个癌反卷积的谱之间cor相关性是不是显著的 ######@###
library(tidyverse)
library(ggpubr)
library(ggplot2)
cor <- read.table("F:/Desktop/毕业设计/inputdata/cor.txt", sep="\t", header=T)
ggplot(cor) + 
  geom_col(aes(x = TCGA, y = -log(p), fill = TCGA),
           position = "dodge2",
           show.legend = TRUE,
           alpha = 0.9) +
  coord_polar() +
  scale_fill_manual(values = c("#CCCCFF", "#FF6666", "#FEBB81", "#CCFF00",
                               "#FFCCCC", "#FF99CC", "#D44842", "#CCCC99",
                               "#99CC66", "#66CC99", "#CC99CC")) +
  guides(
    fill = guide_legend(
      override.aes = list(alpha = 1)
    )
  ) +labs(x="")+
  theme_minimal() +
  theme(
    # axis.title = element_blank(),
    # axis.ticks = element_blank(),
    # axis.text.y = element_blank(),
    axis.text.x = element_text(color = "gray12", size = 12),
    legend.position = "none"
  )
######## 验证单个癌症免疫细胞marker是否在对应反卷积表达谱高表达#########
library("readxl")
library("data.table")
marker = read_excel("F:/Desktop/毕业设计/inputdata/LUSC_marker.xlsx",col_names  =T)
markergene =data.frame(marker[!duplicated(marker$gene),])

setwd("F:/Desktop/毕业设计/inputdata/TAPE-tumor")
#随便读一个LUSC的反卷积，将自查maker在表达谱中有表达的maker筛选出来
list <- list.files()
list=list[grep("LUSC",list)]
data1 = fread(list[1],header = T,sep = ",")
markergene= intersect(colnames(data1),markergene$gene)#65marker
marker=marker[marker$gene %in% markergene,]
marker=marker[!duplicated(marker$gene),]

#刚自查的是B endothelial epithelial mono 表达谱取出来整合到一起
list=list[c(1,5,6,8)]
data=data.frame()
for (i in list) {
  data1 = fread(i, header = T, sep = ",")
  data1 = data.frame(data1)[,marker$gene]
  sample_rows <- sample(1:nrow(data1), 100)
  data1_sampled <- data1[sample_rows, ]
  data = rbind(data, data1_sampled)
}

data1 = data.frame(t(data))
data1 <- data.frame(lapply(data1, as.numeric))

rownames(data1)=marker$gene
colnames(data1) = paste0("Sample", 1:ncol(data1))

library(vegan) 
data2 <- decostand(data1, "standardize", MARGIN = 2)#于对数据进行标准化处理
annotation_row = data.frame(CellType = factor(marker$cell))
rownames(annotation_row) = marker$gene
CellType_color <- c("#FCE4EC","#D4F69F", "#A1FFA1","#e6a0af") 
names(CellType_color) <- c("B","Endothelial","Epithelial","MonoMacro") #类型颜色
celltype=rep(c("B","Endothelial","Epithelial","MonoMacro"),each=100)
annotation_col = data.frame(CellType = factor(celltype))
rownames(annotation_col) = paste0("Sample", 1:ncol(data2))        

ann_colors <- list(CellType=CellType_color)
library(pheatmap)
pheatmap(data2,
         gaps_col = c(100,200,300),
         gaps_row = c(7,8,20),
         cluster_rows = F, 
         cluster_cols = F,
         show_rownames = T,
         show_colnames = F,
         annotation_row = annotation_row,
         annotation_col = annotation_col,
         border = F,
         legend = T,
         annotation_colors = ann_colors,
         color = colorRampPalette(c("#FFFBFC",  "#b14e53"))(10)
)
